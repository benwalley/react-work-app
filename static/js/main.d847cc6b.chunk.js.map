{"version":3,"sources":["AddButton.jsx","Task.jsx","EditWindow.jsx","App.js","serviceWorker.js","index.js"],"names":["AddButton","react_default","a","createElement","className","onClick","this","props","addTask","React","Component","Task","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePriorityChange","changeEvent","newData","data","priority","target","value","taskClass","setState","updateStorage","handleOpenEditWindow","openEditWindow","index","handleDelete","window","confirm","handleDragOver","event","preventDefault","handleDrop","extra","dragged","dataTransfer","getData","updatePositions","handleDragStart","setData","id","handleDragEnter","handleDragLeave","handleDontDrop","state","_this2","draggable","onDragOver","e","onDrop","onDragStart","title","type","name","checked","onChange","due","description","status","note","onDragEnter","onDragLeave","EditWindow","closeWindow","closeEditWindow","handleTaskUpdate","_handleKeyDown","keyCode","document","addEventListener","getElementById","focus","removeEventListener","htmlFor","App","currentState","tasks","push","editWindowOpen","editWindowIndex","editWindow","src_EditWindow_0","handleColorChange","originalPos","newPos","newTasks","movingTask","splice","console","log","currentTask","updateLocalStorage","stateData","JSON","stringify","localStorage","setItem","updateFromLocalStorage","appData","getItem","parse","componentDidUpdate","undefined","src_AddButton_0","map","task","src_Task_0","key","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oTAgBeA,0LARX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBC,QAASC,KAAKC,MAAMC,SAAxD,YALkBC,IAAMC,YCuGfC,qBAtGd,SAAAA,EAAYJ,GAAO,IAAAK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAK,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAX,KAAMC,KAIVW,qBAAuB,SAACC,GACvB,IAAIC,EAAUR,EAAKL,MAAMc,KACzBD,EAAQE,SAAWH,EAAYI,OAAOC,MACtCJ,EAAQK,UAAY,QAAUN,EAAYI,OAAOC,MACjDZ,EAAKc,SAAS,CACVL,KAAMD,IAGVR,EAAKL,MAAMoB,iBAbOf,EAgBnBgB,qBAAuB,WACtBhB,EAAKL,MAAMsB,eAAejB,EAAKL,MAAMuB,QAjBnBlB,EAoBnBmB,aAAe,WAEN,GADAC,OAAOC,QAAQ,0CAEtBrB,EAAKL,MAAMwB,aAAanB,EAAKL,MAAMuB,QAvBlBlB,EA2BnBsB,eAAiB,SAACC,GACjBA,EAAMC,kBA5BYxB,EAgCnByB,WAAa,SAACF,EAAOG,GACpBH,EAAMC,iBACN,IAAIG,EAAUJ,EAAMK,aAAaC,QAAQ,QACrClB,EAASX,EAAKL,MAAMuB,MACxBlB,EAAKL,MAAMmC,gBAAgBH,EAAShB,GAEpC,IAAIH,EAAUR,EAAKL,MAAMc,KACzBD,EAAQK,UAAY,QAAUb,EAAKL,MAAMc,KAAKC,SAC9CV,EAAKc,SAAS,CAACL,KAAMD,KAxCHR,EA4CnB+B,gBAAkB,SAACR,GAClBA,EAAMK,aAAaI,QAAQ,OAAQT,EAAMZ,OAAOsB,KA7C9BjC,EAgDnBkC,gBAAkB,SAACX,GAClB,IAAIf,EAAUR,EAAKL,MAAMc,KACzBD,EAAQK,UAAY,QAAUb,EAAKL,MAAMc,KAAKC,SAAW,WACzDV,EAAKc,SAAS,CAACL,KAAMD,KAnDHR,EAuDnBmC,gBAAiB,SAACZ,GACjB,IAAIf,EAAUR,EAAKL,MAAMc,KACzBD,EAAQK,UAAY,QAAUb,EAAKL,MAAMc,KAAKC,SAC9CV,EAAKc,SAAS,CAACL,KAAMD,KA1DHR,EA6DnBoC,eAAiB,SAACb,GACjBA,EAAMC,kBA5DHxB,EAAKqC,MAAQrC,EAAKL,MAAMc,KAFTT,wEAiET,IAAAsC,EAAA5C,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKgD,UAAU,OAAQC,WAAY,SAACC,GAAD,OAAKH,EAAKhB,eAAemB,IAAIC,OAAQ,SAACD,GAAD,OAAKH,EAAKb,WAAWgB,EAAGH,EAAK3C,MAAMuB,QAAQyB,YAAa,SAACF,GAAD,OAAOH,EAAKP,gBAAgBU,IAAIjD,UAAWE,KAAKC,MAAMc,KAAKI,UAAWoB,GAAIvC,KAAKC,MAAMuB,OAEnN7B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQgD,WAAY,SAACC,GAAD,OAAOH,EAAKF,eAAgBK,KAC5D/C,KAAKC,MAAMc,KAAKmC,OAElBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWgD,WAAY9C,KAAK0C,gBAC1C/C,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,QAAQC,KAAK,WAAWlC,MAAM,MAAMpB,UAAU,WAAWuD,QAAsC,QAA7BrD,KAAKC,MAAMc,KAAKC,SAAoBsC,SAAUtD,KAAKY,uBACjIjB,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,QAAQC,KAAK,WAAWlC,MAAM,SAASpB,UAAU,cAAcuD,QAAsC,WAA7BrD,KAAKC,MAAMc,KAAKC,SAAuBsC,SAAUtD,KAAKY,uBAC1IjB,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,QAAQC,KAAK,WAAWlC,MAAM,QAAQpB,UAAU,aAAauD,QAAsC,UAA7BrD,KAAKC,MAAMc,KAAKC,SAAsBsC,SAAUtD,KAAKY,uBACvIjB,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,QAAQC,KAAK,WAAWlC,MAAM,OAAOpB,UAAU,YAAYuD,QAAsC,SAA7BrD,KAAKC,MAAMc,KAAKC,SAAqBsC,SAAUtD,KAAKY,uBACpIjB,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,QAAQC,KAAK,WAAWlC,MAAM,SAASpB,UAAU,cAAcuD,QAAsC,WAA7BrD,KAAKC,MAAMc,KAAKC,SAAuBsC,SAAUtD,KAAKY,wBAE3IjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBgD,WAAY,SAACC,GAAD,OAAOH,EAAKF,eAAgBK,KACxEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,KAAKC,MAAMc,KAAKwC,MAEjD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBgD,WAAY,SAACC,GAAD,OAAOH,EAAKF,eAAgBK,KAC5EpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,KAAKC,MAAMc,KAAKyC,cAEhD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASgD,WAAY,SAACC,GAAD,OAAOH,EAAKF,eAAgBK,IAAIhD,QAASC,KAAKyB,cAAc9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAC7GH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,KAAKC,MAAMc,KAAK0C,SAEhD9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAegD,WAAY,SAACC,GAAD,OAAOH,EAAKF,eAAgBK,KACrEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,KAAKC,MAAMc,KAAK2C,OAEhD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ6D,YAAa,SAACZ,GAAD,OAAMH,EAAKJ,gBAAgBO,IAAIa,YAAa,SAACb,GAAD,OAAMH,EAAKH,gBAAgBM,IAAIhD,QAASC,KAAKsB,+BAjGlHnB,IAAMC,YCyEVyD,qBAvEd,SAAAA,EAAY5D,GAAO,IAAAK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAA6D,IACfvD,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAAX,KAAMC,KAOV6D,YAAc,WACbxD,EAAKL,MAAM8D,mBATOzD,EAYnB0D,iBAAmB,SAACnC,GAClBvB,EAAKL,MAAM+D,iBAAiBnC,IAbXvB,EAgBnB2D,eAAiB,SAACpC,GACd,OAAQA,EAAMqC,SACV,KAAK,GACD5D,EAAKL,MAAM8D,oBAhBnBzD,EAAKqC,MAAQ,CACZ5B,KAAMT,EAAKL,MAAMc,MAJHT,mFA4Bf6D,SAASC,iBAAiB,UAAWpE,KAAKiE,gBAC1CE,SAASE,eAAe,SAASC,uDAKjCH,SAASI,oBAAoB,UAAWvE,KAAKiE,iDAI9C,OACCtE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,QAASC,KAAK8D,cACnCnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,QAASC,KAAK8D,aAA5C,KACAnE,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,QAAQoB,QAAQ,SAA5B,UACA7E,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOZ,GAAG,QAAQrB,MAAOlB,KAAK2C,MAAM5B,KAAKmC,MAAOI,SAAUtD,KAAKgE,oBAE5ErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,MAAMoB,QAAQ,OAA1B,aACA7E,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOZ,GAAG,MAAMrB,MAAOlB,KAAK2C,MAAM5B,KAAKwC,IAAKD,SAAUtD,KAAKgE,mBACxErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,cAAcoB,QAAQ,eAAlC,gBACA7E,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOZ,GAAG,cAAcrB,MAAOlB,KAAK2C,MAAM5B,KAAKyC,YAAaF,SAAUtD,KAAKgE,mBACxFrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,SAASoB,QAAQ,UAA7B,WACA7E,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOZ,GAAG,SAASrB,MAAOlB,KAAK2C,MAAM5B,KAAK0C,OAAQH,SAAUtD,KAAKgE,oBAE9ErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,OAAOoB,QAAQ,QAA3B,UACA7E,EAAAC,EAAAC,cAAA,YAAU0C,GAAG,OAAOrB,MAAOlB,KAAK2C,MAAM5B,KAAK2C,KAAMJ,SAAUtD,KAAKgE,8BA/DlD7D,IAAMC,YCgHhBqE,qBA7Gb,SAAAA,EAAYxE,GAAO,IAAAK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAyE,IACjBnE,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAkE,GAAA9D,KAAAX,KAAMC,KASRC,QAAU,WACR,IAAIwE,EAAepE,EAAKqC,MAAMgC,MAC9BD,EAAaE,KAAK,CAChB1B,MAAO,GACPlC,SAAU,QACVuC,IAAK,GACLC,YAAa,GACbC,OAAQ,GACRC,KAAM,GACNvC,UAAW,eAEbb,EAAKc,SAAS,CAACuD,MAAOD,KArBLpE,EAwBnBiB,eAAiB,SAACC,GAChBlB,EAAKc,SAAS,CAACyD,gBAAgB,IAC/BvE,EAAKc,SAAS,CAAC0D,gBAAiBtD,KA1BflB,EA6BnByD,gBAAkB,WAChBzD,EAAKc,SAAS,CAACyD,gBAAgB,KA9BdvE,EAiCnByE,WAAa,WACX,GAAGzE,EAAKqC,MAAMkC,eACZ,OACElF,EAAAC,EAAAC,cAACmF,EAAD,CAAYjB,gBAAmBzD,EAAKyD,gBAAiBhD,KAAMT,EAAKqC,MAAMgC,MAAMrE,EAAKqC,MAAMmC,iBAAkBd,iBAAkB1D,EAAK0D,iBAAkBxC,MAAOlB,EAAKqC,MAAMmC,mBApCvJxE,EAyCnB2E,kBAAoB,aAzCD3E,EA6CnB8B,gBAAkB,SAAC8C,EAAaC,GAC9B,IAAIC,EAAW9E,EAAKqC,MAAMgC,MACtBU,EAAaD,EAASF,GAC1BE,EAASE,OAAOJ,EAAa,GAC7BE,EAASE,OAAOH,EAAQ,EAAGE,GAC3B/E,EAAKc,SAAS,CAACuD,MAAOS,KAlDL9E,EAqDnBmB,aAAe,SAACD,GACd+D,QAAQC,IAAIhE,GACZ,IAAImD,EAAQrE,EAAKqC,MAAMgC,MACvBA,EAAMW,OAAO9D,EAAO,GACpB+D,QAAQC,IAAIb,GACZrE,EAAKc,SAAS,CAACuD,MAAOA,KA1DLrE,EA6DnB0D,iBAAmB,SAACnC,GAClB,IAAI4D,EAAcnF,EAAKqC,MAAMmC,gBACzBH,EAAQrE,EAAKqC,MAAMgC,MAEvBA,EAAMc,GAAa5D,EAAMZ,OAAOsB,IAAMV,EAAMZ,OAAOC,MACnDZ,EAAKc,SAAS,CAACuD,MAAOA,IAEtBrE,EAAKoF,sBApEYpF,EAuEnBoF,mBAAqB,WACnB,IAAIC,EAAYC,KAAKC,UAAUvF,EAAKqC,OACtBjB,OAAOoE,aACbC,QAAQ,UAAWJ,IA1EVrF,EA6EnB0F,uBAAyB,WACvB,IACIC,EADUvE,OAAOoE,aACCI,QAAQ,WAC9BD,EAAUL,KAAKO,MAAMF,GACrB3F,EAAKc,SAAS6E,IAjFG3F,EA4FnB8F,mBAAqB,WACnB9F,EAAKoF,sBA3FLpF,EAAKqC,MAAQ,CACXgC,MAAO,GACPE,gBAAgB,EAChBC,qBAAiBuB,GALF/F,mFAqFHoB,OAAOoE,aACCI,QAAQ,YAE5BlG,KAAKgG,0DAQA,IAAApD,EAAA5C,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,CAAWpG,QAAWF,KAAKE,UAC1BF,KAAK2C,MAAMgC,MAAM4B,IAAI,SAACC,EAAMhF,GAC3B,OAAO7B,EAAAC,EAAAC,cAAC4G,EAAD,CAAMC,IAAMlF,EAAQA,MAAOA,EAAOC,aAAcmB,EAAKnB,aAAcW,gBAAiBQ,EAAKR,gBAAiBb,eAAgBqB,EAAKrB,eAAgBR,KAAM6B,EAAKD,MAAMgC,MAAMnD,GAAQyD,kBAAmBrC,EAAKqC,kBAAmB5D,cAAeuB,EAAK8C,uBAErP1F,KAAK+E,qBAxGI3E,cCKEuG,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAAS9C,SAASE,eAAe,SD2H3C,kBAAmB6C,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d847cc6b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddButton.css';\r\n\r\n\r\nclass AddButton extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"add-task-button\" onClick={this.props.addTask}>\r\n        +\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddButton;","import React, { Component } from 'react';\r\nimport './Task.css';\r\n\r\n\r\nclass Task extends React.Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = this.props.data\r\n\t }\r\n\r\n\thandlePriorityChange = (changeEvent) => {\r\n\t\tlet newData = this.props.data;\r\n\t\tnewData.priority = changeEvent.target.value;\r\n\t\tnewData.taskClass = \"task \" + changeEvent.target.value;\r\n\t\tthis.setState({\r\n\t\t    data: newData\r\n\t\t});\r\n\r\n\t\tthis.props.updateStorage();\r\n\t};\r\n\r\n\thandleOpenEditWindow = () => {\r\n\t\tthis.props.openEditWindow(this.props.index)\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet x = window.confirm(\"Are you sure you want to delete this?\")\r\n\t\tif(x == true){\r\n\t\t\tthis.props.handleDelete(this.props.index)\r\n\t\t}\r\n\t}\r\n\r\n\thandleDragOver = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// console.log(DataTransfer())\r\n\t}\r\n\r\n\thandleDrop = (event, extra) => {\r\n\t\tevent.preventDefault();\r\n\t\tvar dragged = event.dataTransfer.getData(\"Text\");\r\n\t\tlet target = this.props.index;\r\n\t\tthis.props.updatePositions(dragged, target);\r\n\t\t// Make sure there is not still a hover class\r\n\t\tlet newData = this.props.data;\r\n\t\tnewData.taskClass = \"task \" + this.props.data.priority;\r\n\t\tthis.setState({data: newData})\r\n\r\n\t}\r\n\r\n\thandleDragStart = (event) => {\r\n\t\tevent.dataTransfer.setData(\"Text\", event.target.id);\r\n\t}\r\n\r\n\thandleDragEnter = (event) => {\r\n\t\tlet newData = this.props.data;\r\n\t\tnewData.taskClass = \"task \" + this.props.data.priority + ' hovered';\r\n\t\tthis.setState({data: newData})\r\n\r\n\t}\r\n\r\n\thandleDragLeave =(event) => {\r\n\t\tlet newData = this.props.data;\r\n\t\tnewData.taskClass = \"task \" + this.props.data.priority;\r\n\t\tthis.setState({data: newData})\r\n\t}\r\n\r\n\thandleDontDrop = (event) => {\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <div draggable=\"true\"  onDragOver={(e)=>this.handleDragOver(e)} onDrop={(e)=>this.handleDrop(e, this.props.index)} onDragStart={(e) => this.handleDragStart(e)} className={this.props.data.taskClass} id={this.props.index}>\r\n     \r\n        <h2 className=\"title\" onDragOver={(e) => this.handleDontDrop (e)}>\r\n        \t{this.props.data.title}\r\n        </h2>\r\n        <div className=\"priority\" onDragOver={this.handleDontDrop}>\r\n        \t<input type=\"radio\" name=\"priority\" value=\"red\" className=\"redRadio\" checked={this.props.data.priority === \"red\"} onChange={this.handlePriorityChange}/>\r\n        \t<input type=\"radio\" name=\"priority\" value=\"yellow\" className=\"yellowRadio\" checked={this.props.data.priority === \"yellow\"} onChange={this.handlePriorityChange}/>\r\n        \t<input type=\"radio\" name=\"priority\" value=\"green\" className=\"greenRadio\" checked={this.props.data.priority === \"green\"} onChange={this.handlePriorityChange}/>\r\n        \t<input type=\"radio\" name=\"priority\" value=\"blue\" className=\"blueRadio\" checked={this.props.data.priority === \"blue\"} onChange={this.handlePriorityChange}/>\r\n        \t<input type=\"radio\" name=\"priority\" value=\"purple\" className=\"purpleRadio\" checked={this.props.data.priority === \"purple\"} onChange={this.handlePriorityChange}/>\r\n        </div>\r\n        <div className=\"due-date section\" onDragOver={(e) => this.handleDontDrop (e)}>\r\n        \t\t<div className=\"section-title\">Due</div>\r\n        \t\t<div className=\"section-data\">{this.props.data.due}</div>\r\n        </div>\r\n        <div className=\"description section\" onDragOver={(e) => this.handleDontDrop (e)}>\r\n        \t<div className=\"section-title\">Description</div>\r\n        \t<div className=\"section-data\">{this.props.data.description}</div>\r\n        </div>\r\n        <div className=\"delete\" onDragOver={(e) => this.handleDontDrop (e)} onClick={this.handleDelete}><i className=\"fas fa-trash-alt\"></i></div>\r\n        <div className=\"status section\">\r\n        \t<div className=\"section-title\">Status</div>\r\n        \t<div className=\"section-data\">{this.props.data.status}</div>\r\n        </div>\r\n        <div className=\"note section\" onDragOver={(e) => this.handleDontDrop (e)}>\r\n        \t<div className=\"section-title\">Notes</div>\r\n        \t<div className=\"section-data\">{this.props.data.note}</div>\r\n        </div>\r\n        <div className=\"cover\" onDragEnter={(e) =>this.handleDragEnter(e)} onDragLeave={(e) =>this.handleDragLeave(e)} onClick={this.handleOpenEditWindow}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport './EditWindow.css';\r\n\r\n\r\n\r\nclass EditWindow extends React.Component {\r\n\tconstructor(props) {\r\n    \tsuper(props);\r\n\r\n    \tthis.state = {\r\n    \t\tdata: this.props.data\r\n    \t}\r\n  \t}\r\n\r\n\tcloseWindow = () => {\r\n\t\tthis.props.closeEditWindow()\r\n\t}\r\n\r\n\thandleTaskUpdate = (event) => {\r\n\t \tthis.props.handleTaskUpdate(event);\t\r\n\t}\r\n\r\n\t_handleKeyDown = (event) => {\r\n\t    switch( event.keyCode ) {\r\n\t        case 13:\r\n\t            this.props.closeEditWindow()\r\n\t            break;\r\n\t        default: \r\n\t            break;\r\n\t    }\r\n\t}\r\n\r\n\t// componentWillMount deprecated in React 16.3\r\n\tcomponentDidMount(){\r\n\t    document.addEventListener(\"keydown\", this._handleKeyDown);\r\n\t    document.getElementById(\"title\").focus();\r\n\t}\r\n\r\n\r\n\tcomponentWillUnmount() {\r\n\t    document.removeEventListener(\"keydown\", this._handleKeyDown);\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n    \t<div>\r\n    \t\t<div className=\"outer\" onClick={this.closeWindow}></div>\r\n      \t\t<div className=\"edit-window\">\r\n      \t\t\t<div className=\"close-button\" onClick={this.closeWindow}>X</div>\r\n      \t\t\t<form>\r\n\t      \t\t\t<div className=\"formSection\">\r\n\t      \t\t\t\t<label name=\"title\" htmlFor=\"title\">Title:</label>\r\n\t      \t\t\t\t<input type=\"text\" id=\"title\" value={this.state.data.title} onChange={this.handleTaskUpdate}/>\r\n\t      \t\t\t</div>\r\n\t      \t\t\t<div className=\"formSection\">\r\n\t      \t\t\t\t<label name=\"due\" htmlFor=\"due\">Due Date:</label>\r\n\t      \t\t\t\t<input type=\"text\" id=\"due\" value={this.state.data.due} onChange={this.handleTaskUpdate}/>\r\n\t      \t\t\t<div className=\"formSection\">\r\n\t      \t\t\t</div>\r\n\t      \t\t\t\t<label name=\"description\" htmlFor=\"description\">Description:</label>\r\n\t      \t\t\t\t<input type=\"text\" id=\"description\" value={this.state.data.description} onChange={this.handleTaskUpdate}/>\r\n\t      \t\t\t<div className=\"formSection\">\r\n\t      \t\t\t</div>\r\n\t      \t\t\t\t<label name=\"status\" htmlFor=\"status\">Status:</label>\r\n\t      \t\t\t\t<input type=\"text\" id=\"status\" value={this.state.data.status} onChange={this.handleTaskUpdate}/>\r\n\t      \t\t\t</div>\r\n\t      \t\t\t<div className=\"formSection\">\r\n\t      \t\t\t\t<label name=\"note\" htmlFor=\"note\">Notes:</label>\r\n\t      \t\t\t\t<textarea id=\"note\" value={this.state.data.note} onChange={this.handleTaskUpdate}/>\r\n\t      \t\t\t</div>\r\n      \t\t\t</form>\r\n      \t\t</div>\r\n      \t</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditWindow;","import React, { Component } from 'react';\nimport AddButton from './AddButton.jsx';\nimport Task from './Task.jsx';\nimport EditWindow from './EditWindow.jsx';\n// import './grabbable.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      editWindowOpen: false,\n      editWindowIndex: undefined\n    }\n  }\n\n\n  addTask = () => {\n    let currentState = this.state.tasks;\n    currentState.push({\n      title: \"\",\n      priority: \"green\",\n      due: \"\",\n      description: \"\",\n      status: \"\",\n      note: \"\",\n      taskClass: 'task green'\n    })\n    this.setState({tasks: currentState})\n  }\n\n  openEditWindow = (index) => {\n    this.setState({editWindowOpen: true})\n    this.setState({editWindowIndex: index})\n  }\n\n  closeEditWindow = () => {\n    this.setState({editWindowOpen: false})\n  }\n\n  editWindow = () => {\n    if(this.state.editWindowOpen) {\n      return(\n        <EditWindow closeEditWindow = {this.closeEditWindow} data={this.state.tasks[this.state.editWindowIndex]} handleTaskUpdate={this.handleTaskUpdate} index={this.state.editWindowIndex}/>\n      )\n    }\n  }\n\n  handleColorChange = () => {\n\n  }\n\n  updatePositions = (originalPos, newPos) => {\n    let newTasks = this.state.tasks;\n    let movingTask = newTasks[originalPos]\n    newTasks.splice(originalPos, 1);\n    newTasks.splice(newPos, 0, movingTask)\n    this.setState({tasks: newTasks});\n  }\n\n  handleDelete = (index) => {\n    console.log(index)\n    let tasks = this.state.tasks;\n    tasks.splice(index, 1)\n    console.log(tasks)\n    this.setState({tasks: tasks})\n  }\n\n  handleTaskUpdate = (event) => {\n    let currentTask = this.state.editWindowIndex;\n    let tasks = this.state.tasks;\n\n    tasks[currentTask][event.target.id] = event.target.value\n    this.setState({tasks: tasks});\n\n    this.updateLocalStorage()\n  }\n\n  updateLocalStorage = () => {\n    let stateData = JSON.stringify(this.state);\n    let storage = window.localStorage;\n    storage.setItem(\"myTasks\", stateData)\n  }\n\n  updateFromLocalStorage = () => {\n    let storage = window.localStorage;\n    let appData = storage.getItem('myTasks');\n    appData = JSON.parse(appData);\n    this.setState(appData);\n  }\n\n  componentDidMount() {\n    let storage = window.localStorage;\n    let appData = storage.getItem('myTasks');\n    if(appData) {\n      this.updateFromLocalStorage()\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.updateLocalStorage()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AddButton addTask = {this.addTask}/>\n        {this.state.tasks.map((task, index) => {\n          return <Task key={ index } index={index} handleDelete={this.handleDelete} updatePositions={this.updatePositions} openEditWindow={this.openEditWindow} data={this.state.tasks[index]} handleColorChange={this.handleColorChange} updateStorage={this.updateLocalStorage}/>\n        })}\n        {this.editWindow()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}